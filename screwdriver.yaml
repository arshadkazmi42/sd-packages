shared:
  image: centos:centos7
  environment:
    SKOPEO_PACKAGE: skopeo
    ZSTD_PACKAGE: zstd
    ZSTD_VERSION: 1.5.0

jobs:
  skopeo:
    requires: [~pr, ~commit]
    environment:
      RELEASE_FILE: /tmp/skopeo-linux.tar.gz
    steps:
      - make: |
          yum install -y epel-release
          yum install -y wget git make gcc gcc-c++ jq bzip2
          wget -q -O go1.15.6.tar.gz https://golang.org/dl/go1.15.6.linux-amd64.tar.gz
          tar -C /usr/local -oxzf go1.15.6.tar.gz
          mkdir /go && cd /go
          export GOROOT=/usr/local/go && export GOPATH=/go/src && export PATH=${PATH}:${GOROOT}/bin
          git clone https://github.com/containers/${SKOPEO_PACKAGE} $GOPATH/src/github.com/containers/${SKOPEO_PACKAGE}
          cd $GOPATH/src/github.com/containers/${SKOPEO_PACKAGE} && make DISABLE_CGO=1 bin/${SKOPEO_PACKAGE}
          chmod +x bin/${SKOPEO_PACKAGE}
          ./bin/${SKOPEO_PACKAGE} -v
      - test-node12-sha256: |
          DIGEST=$( ./bin/skopeo inspect docker://docker.io/node:12 | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image node:12 sha256 digest"
            exit 1   v
          fi
      - test-alpine-sha256: |
          DIGEST=$( ./bin/${SKOPEO_PACKAGE} inspect docker://docker.io/alpine:latest | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image alpine:latest sha256 digest"
            exit 1
          fi
      - test-busybox-sha256: |
          DIGEST=$( ./bin/${SKOPEO_PACKAGE} inspect docker://docker.io/busybox:latest | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image busybox:latest sha256 digest"
            exit 1
          fi
      - setup-ci: git clone https://github.com/screwdriver-cd/toolbox.git ci
      - package: tar -czf ${RELEASE_FILE} ./bin/${SKOPEO_PACKAGE}
      - tag: ./ci/git-tag.sh
      - publish: ([ ! -z $SD_PULL_REQUEST ] && echo skip publish for PR) || ./ci/git-release.sh
    secrets:
      # Pushing tags to Git
      - GIT_KEY_BASE64
      # Pushing releases to GitHub
      - GITHUB_TOKEN

  zstd:
    requires: [~pr, ~commit]
    environment:
      RELEASE_FILE : /tmp/zstd-cli-linux.tar.gz
    steps:
      - make: |
          sleep 1h
          yum install -y epel-release
          yum install -y zlib-devel wget git make gcc gcc-c++ jq bzip2
          wget -q -O zstd-${ZSTD_VERSION}.tar.gz https://github.com/facebook/zstd/releases/download/v${ZSTD_VERSION}/zstd-${ZSTD_VERSION}.tar.gz
          tar -C . -oxzf zstd-${ZSTD_VERSION}.tar.gz
          cd zstd-${ZSTD_VERSION}
          make
          chmod +x ./${ZSTD_PACKAGE}
          ./${ZSTD_PACKAGE} --version
      - setup-ci: git clone https://github.com/screwdriver-cd/toolbox.git ci
      - package: tar -czf ${RELEASE_FILE} ./${ZSTD_PACKAGE}
      - tag: ./ci/git-tag.sh
      - publish: ./ci/git-release.sh
    secrets:
      # Pushing tags to Git
      - GIT_KEY_BASE64
      # Pushing releases to GitHub
      - GITHUB_TOKEN

